@model AspnetCoreMvcFull.ViewModels.MaintenanceManagement.MaintenanceScheduleDetailViewModel
@{
  ViewData["Title"] = "Maintenance Details";
  Layout = "_ContentNavbarLayout";
  bool isUpdated = Model.UpdatedAt.HasValue && !string.IsNullOrEmpty(Model.UpdatedBy);
}

<!-- Maintenance Title Card -->
<div class="row mb-4">
  <div class="col-12">
    <div class="card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h4 class="mb-0">
          <i class="bx bx-wrench text-primary me-2"></i>@Model.Title
        </h4>
        <div class="text-end">
          <span class="badge @(isUpdated ? "bg-info" : "bg-success")">
            <i class="bx @(isUpdated ? "bx-edit-alt" : "bx-check-circle") me-1"></i>
            @(isUpdated ? "Updated" : "Original")
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<!-- Info + Audit -->
<div class="row">
  <!-- Maintenance Info -->
  <div class="col-lg-8 mb-4">
    <div class="card shadow-sm h-100">
      <div class="card-header">
        <h6 class="mb-0">Maintenance Information</h6>
      </div>
      <div class="card-body">
        <div class="row g-3">
          <div class="col-md-6">
            <label class="form-label">Crane Code</label>
            <input class="form-control" readonly value="@Model.CraneCode" />
          </div>
          <div class="col-md-6">
            <label class="form-label">Duration (days)</label>
            <input class="form-control" readonly value="@((Model.EndDate - Model.StartDate).Days + 1)" />
          </div>
          <div class="col-md-12">
            <label class="form-label">Schedule Period</label>
            <input class="form-control" readonly
              value="@($"{Model.StartDate:dd MMM yyyy} - {Model.EndDate:dd MMM yyyy}")" />
          </div>
          <div class="col-12">
            <label class="form-label">Description</label>
            <textarea class="form-control" style="white-space:pre-wrap;overflow:hidden;resize:none" rows="1" readonly
              data-autoresize>@(string.IsNullOrWhiteSpace(Model.Description) ? "-" : Model.Description)</textarea>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Audit Trail -->
  <div class="col-lg-4 mb-4">
    <div class="card shadow-sm h-100">
      <div class="card-header">
        <h6 class="mb-0">Audit Trail</h6>
      </div>
      <div class="card-body">
        <ul class="list-unstyled mb-0">
          <li class="mb-3">
            <strong>Created:</strong> @Model.CreatedBy <br />
            <small class="text-muted">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
          </li>
          @if (isUpdated)
          {
            <li>
              <strong>Last Updated:</strong> @Model.UpdatedBy <br />
              <small class="text-muted">@Model.UpdatedAt.Value.ToString("dd/MM/yyyy HH:mm")</small>
            </li>
          }
        </ul>
      </div>
    </div>
  </div>
</div>

<!-- Scheduled Shifts -->
<div class="row">
  <div class="col-12">
    <div class="card shadow-sm">
      <div class="card-header">
        @* <h6 class="mb-0">Scheduled Shifts (@Model.Shifts.Count())</h6> *@
        <h6 class="mb-0">Scheduled Shifts</h6>
      </div>
      @if (Model.Shifts.Any())
      {
        <div class="table-responsive">
          <table class="table table-hover table-sm mb-0">
            <thead class="table-light">
              <tr>
                <th>Date</th>
                <th>Day</th>
                <th>Shifts</th>
              </tr>
            </thead>
            <tbody>
              @{
                var shiftsByDate = Model.Shifts.GroupBy(s => s.Date.Date).OrderBy(g => g.Key);
                foreach (var group in shiftsByDate)
                {
                  <tr>
                    <td>@group.Key.ToString("dd MMM yyyy")</td>
                    <td>@group.Key.ToString("dddd")</td>
                    <td>
                      @foreach (var shift in group.OrderBy(s => s.StartTime))
                      {
                        <span class="badge bg-primary mb-1">
                          @shift.ShiftName
                          <small class="ms-1">(@(shift.StartTime?.ToString(@"hh\:mm")) -
                            @(shift.EndTime?.ToString(@"hh\:mm")))</small>
                        </span>
                      }
                    </td>
                  </tr>
                }
              }
            </tbody>
          </table>
        </div>
      }
      else
      {
        <div class="card-body text-center text-muted">
          No shifts scheduled.
        </div>
      }
    </div>
  </div>
</div>

<!-- Action buttons -->
<div class="row mt-4">
  <div class="col-12">
    <a href="@Url.Action("Index", "MaintenanceHistory")" class="btn btn-outline-secondary">
      <i class="bx bx-arrow-back me-1"></i> Back
    </a>
    @if (ViewBag.CanEdit == true)
    {
      <a href="@Url.Action("Edit", "Maintenance", new { documentNumber = Model.DocumentNumber })" class="btn btn-primary">
        <i class="bx bx-edit-alt me-1"></i> Edit
      </a>
      <a href="@Url.Action("Delete", "Maintenance", new { documentNumber = Model.DocumentNumber })"
        class="btn btn-danger">
        <i class="bx bx-trash me-1"></i> Delete
      </a>
    }
  </div>
</div>

@section PageScripts {
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('textarea[data-autoresize]').forEach(t => {
        t.style.height = 'auto';
        t.style.height = t.scrollHeight + 'px';
      });
    });
  </script>
}
