@model AspnetCoreMvcFull.ViewModels.MaintenanceManagement.MaintenanceHistoryPagedViewModel
@{
  ViewData["Title"] = "Riwayat Pemeliharaan Crane";
  Layout = "_ContentNavbarLayout";

  // Check if viewing a specific crane's history
  bool showingCraneHistory = ViewBag.CraneName != null;
}

@* <h4 class="py-3 mb-4">
  <span class="text-muted fw-light">Maintenance /</span> Riwayat
  @if (showingCraneHistory)
  {
    <span class="text-muted fw-light">/ Crane @ViewBag.CraneName</span>
  }
</h4> *@

<div id="alertContainer">
  @if (!string.IsNullOrEmpty(Model.SuccessMessage))
  {
    <div class="alert alert-success alert-dismissible fade show auto-close-alert" role="alert">
      @Model.SuccessMessage
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  }

  @if (!string.IsNullOrEmpty(Model.ErrorMessage))
  {
    <div class="alert alert-danger alert-dismissible fade show auto-close-alert" role="alert">
      @Model.ErrorMessage
      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
  }
</div>

<div class="card mb-4">
  @* <div class="card-header d-flex justify-content-between align-items-center">
    <h5 class="mb-0">Filter dan Pencarian</h5>
  </div> *@
  <div class="card-body">
    <form id="filterForm" method="get" action="@Url.Action("Index", "MaintenanceHistory")">
      <div class="row g-3">
        <div class="col-md-3">
          <label asp-for="Filter.CraneId" class="form-label">Crane</label>
          <select asp-for="Filter.CraneId" asp-items="Model.Filter.CraneList" class="form-select">
            <option value="">-- Semua Crane --</option>
          </select>
        </div>
        <div class="col-md-3">
          <label asp-for="Filter.StartDate" class="form-label">Dari Tanggal</label>
          <input asp-for="Filter.StartDate" class="form-control" type="date" />
        </div>
        <div class="col-md-3">
          <label asp-for="Filter.EndDate" class="form-label">Sampai Tanggal</label>
          <input asp-for="Filter.EndDate" class="form-control" type="date" />
        </div>
        <div class="col-md-3">
          <label asp-for="Filter.GlobalSearch" class="form-label">Cari</label>
          <input asp-for="Filter.GlobalSearch" class="form-control" placeholder="Ketik kata kunci..." />
        </div>
        <div class="col-12 mt-3 d-flex justify-content-between">
          <div>
            <button type="submit" class="btn btn-primary me-2">
              <i class="bx bx-filter-alt me-1"></i> Terapkan Filter
            </button>
            <a href="@Url.Action("Index", "MaintenanceHistory")" class="btn btn-outline-secondary">
              <i class="bx bx-reset me-1"></i> Reset
            </a>
          </div>
          <div id="exportButtons" class="d-flex gap-2">
            <!-- Tombol export akan ditambahkan disini oleh JavaScript -->
          </div>
        </div>
      </div>

      <!-- Hidden inputs for pagination -->
      <input type="hidden" name="PageNumber" id="PageNumber" value="@Model.Filter.PageNumber" />
      <input type="hidden" name="PageSize" id="PageSize" value="@Model.Filter.PageSize" />
      <input type="hidden" name="SortBy" id="SortBy" value="@Model.Filter.SortBy" />
      <input type="hidden" name="SortDesc" id="SortDesc" value="@Model.Filter.SortDesc.ToString()" />
    </form>
  </div>
</div>

<div class="card">
  <div class="card-header d-flex justify-content-between align-items-center">
    <h5 class="mb-0">
      @if (showingCraneHistory)
      {
        <text>Riwayat Pemeliharaan Crane @ViewBag.CraneName</text>
      }
      else
      {
        <text>Semua Jadwal Pemeliharaan</text>
      }
    </h5>
    <div>
      <a href="@Url.Action("Index", "Maintenance")" class="btn btn-primary">
        <i class="bx bx-plus me-1"></i> Buat Baru
      </a>
      <a href="@Url.Action("Calendar", "Maintenance")" class="btn btn-outline-secondary ms-2">
        <i class="bx bx-calendar me-1"></i> Tampilan Kalender
      </a>
    </div>
  </div>

  <div id="maintenanceHistoryTableContainer">
    @await Html.PartialAsync("_MaintenanceHistoryTable", Model)
  </div>
</div>

@section PageScripts {
  <script src="~/vendor/libs/datatables/js/jquery.dataTables.min.js"></script>
  <script src="~/vendor/libs/datatables/js/dataTables.buttons.min.js"></script>
  <script src="~/vendor/libs/datatables/js/jszip.min.js"></script>
  <script src="~/vendor/libs/datatables/js/pdfmake.min.js"></script>
  <script src="~/vendor/libs/datatables/js/vfs_fonts.js"></script>
  <script src="~/vendor/libs/datatables/js/buttons.html5.min.js"></script>

  <script>
    $(document).ready(function () {
      // Buat tombol Excel dan PDF kustom
      var excelBtn = $('<a href="#" class="btn btn-sm btn-success"><i class="bx bx-file me-1"></i> Excel</a>');
      var pdfBtn = $('<a href="#" class="btn btn-sm btn-danger"><i class="bx bx-file-pdf me-1"></i> PDF</a>');

      // Tambahkan ke container
      $('#exportButtons').append(excelBtn).append(pdfBtn);

      // Inisialisasi DataTable dengan tombol export yang disembunyikan
      var table = $('#maintenanceHistoryTable').DataTable({
        dom: 'Bfrtip', // Tipe tampilan, B=buttons
        paging: false,
        ordering: false,
        info: false,
        searching: false,
        buttons: [
          {
            extend: 'excel',
            text: 'Excel',
            className: 'hidden-button', // Class untuk disembunyikan
            title: '@(ViewBag.CraneName != null ? $"Riwayat Pemeliharaan - Crane {ViewBag.CraneName}" : "Riwayat Pemeliharaan")',
            exportOptions: {
              columns: ':not(:last-child)' // Exclude Actions column
            }
          },
          {
            extend: 'pdf',
            text: 'PDF',
            className: 'hidden-button', // Class untuk disembunyikan
            title: '@(ViewBag.CraneName != null ? $"Riwayat Pemeliharaan - Crane {ViewBag.CraneName}" : "Riwayat Pemeliharaan")',
            exportOptions: {
              columns: ':not(:last-child)' // Exclude Actions column
            },
            customize: function (doc) {
              // Kustomisasi PDF
              doc.content[1].table.widths = Array(doc.content[1].table.body[0].length + 1).join('*').split('');
              doc.defaultStyle.fontSize = 10;
              doc.styles.tableHeader.fontSize = 11;
              doc.styles.title.fontSize = 14;

              // Tambahkan footer
              doc.footer = function (currentPage, pageCount) {
                return { text: currentPage.toString() + ' dari ' + pageCount, alignment: 'center' };
              };
            }
          }
        ]
      });

      // Sembunyikan tombol bawaan DataTables
      $('<style>.hidden-button, .dt-buttons { display: none !important; }</style>').appendTo('head');

      // Hubungkan tombol kustom dengan fungsi export DataTables
      excelBtn.on('click', function (e) {
        e.preventDefault();
        table.button(0).trigger(); // Indeks 0 = Excel
      });

      pdfBtn.on('click', function (e) {
        e.preventDefault();
        table.button(1).trigger(); // Indeks 1 = PDF
      });

      // Script untuk menghilangkan alert secara otomatis setelah 5 detik
      setTimeout(function () {
        $('.auto-close-alert').fadeOut('slow', function () {
          $(this).remove();
        });
      }, 5000);
    });
  </script>
}
