@model AspnetCoreMvcFull.ViewModels.MaintenanceManagement.MaintenanceHistoryPagedViewModel

@if (Model.PagedSchedules.Items.Any())
{
  <div class="table-responsive text-nowrap">
    <table class="table table-hover" id="maintenanceHistoryTable">
      <thead>
        <tr>
          <th>#</th>
          <th>Judul</th>
          <th>Crane</th>
          <th>Tanggal Mulai</th>
          <th>Tanggal Selesai</th>
          <th>Durasi</th>
          <th>Dibuat Oleh</th>
          <th>Dibuat Pada</th>
          <th>Aksi</th>
        </tr>
      </thead>
      <tbody class="table-border-bottom-0">
        @{
          int rowNumber = 1;
          var startIndex = (Model.PagedSchedules.PageNumber - 1) * Model.PagedSchedules.PageSize + 1;
        }
        @foreach (var schedule in Model.PagedSchedules.Items)
        {
          <tr style="cursor: pointer;"
            onclick="window.location='@Url.Action("Details", "MaintenanceHistory", new { documentNumber = schedule.DocumentNumber })'">
            <td><strong>@(startIndex++)</strong></td>
            <td>@schedule.Title</td>
            <td>@schedule.CraneCode</td>
            <td data-order="@schedule.StartDate.ToString("yyyy-MM-dd")">
              @schedule.StartDate.ToString("dd/MM/yyyy")
            </td>
            <td data-order="@schedule.EndDate.ToString("yyyy-MM-dd")">
              @schedule.EndDate.ToString("dd/MM/yyyy")
            </td>
            <td data-order="@((schedule.EndDate - schedule.StartDate).Days + 1)">
              @((schedule.EndDate - schedule.StartDate).Days + 1) hari
            </td>
            <td>@schedule.CreatedBy</td>
            <td data-order="@schedule.CreatedAt.ToString("yyyy-MM-dd HH:mm")">
              @schedule.CreatedAt.ToString("dd/MM/yyyy HH:mm")
            </td>
            <td onclick="event.stopPropagation();">
              <div class="action-buttons">
                <a class="btn btn-sm btn-outline-primary"
                  href="@Url.Action("Details", "MaintenanceHistory", new { documentNumber = schedule.DocumentNumber })"
                  title="Lihat Detail">
                  <i class="bx bx-show-alt"></i>
                </a>
                <a class="btn btn-sm btn-outline-success"
                  href="@Url.Action("Edit", "Maintenance", new { documentNumber = schedule.DocumentNumber })" title="Edit">
                  <i class="bx bx-edit-alt"></i>
                </a>
              </div>
            </td>
          </tr>
        }
      </tbody>
    </table>
  </div>

  <!-- Footer Card dengan Pagination Controls -->
  <div class="card-header border-top d-flex justify-content-between align-items-center">
    <div>
      Menampilkan @(((Model.PagedSchedules.PageNumber - 1) * Model.PagedSchedules.PageSize) + 1) sampai
      @(Math.Min(Model.PagedSchedules.PageNumber * Model.PagedSchedules.PageSize, Model.PagedSchedules.TotalCount))
      dari @Model.PagedSchedules.TotalCount data
    </div>

    <div>
      <div class="btn-group">
        <button type="button"
          class="btn btn-icon btn-outline-primary @(Model.PagedSchedules.HasPreviousPage ? "" : "disabled")"
          data-page="@(Model.PagedSchedules.PageNumber - 1)" @(Model.PagedSchedules.HasPreviousPage ? "" : "disabled")>
          <i class="tf-icon bx bx-chevron-left"></i>
        </button>

        @{
          int startPage = Math.Max(1, Model.PagedSchedules.PageNumber - 2);
          int endPage = Math.Min(Model.PagedSchedules.PageCount, startPage + 4);

          if (endPage - startPage < 4 && endPage < Model.PagedSchedules.PageCount)
          {
            endPage = Math.Min(Model.PagedSchedules.PageCount, endPage + (4 - (endPage - startPage)));
          }

          if (endPage - startPage < 4 && startPage > 1)
          {
            startPage = Math.Max(1, startPage - (4 - (endPage - startPage)));
          }
        }

        @for (int i = startPage; i <= endPage; i++)
        {
          <button type="button" class="btn @(Model.PagedSchedules.PageNumber == i ? "btn-primary" : "btn-outline-primary")"
            data-page="@i">
            @i
          </button>
        }

        <button type="button"
          class="btn btn-icon btn-outline-primary @(Model.PagedSchedules.HasNextPage ? "" : "disabled")"
          data-page="@(Model.PagedSchedules.PageNumber + 1)" @(Model.PagedSchedules.HasNextPage ? "" : "disabled")>
          <i class="tf-icon bx bx-chevron-right"></i>
        </button>
      </div>
    </div>

    <div>
      <select id="pageSizeSelector" class="form-select form-select-sm" style="width: auto;">
        @foreach (var size in new[] { 10, 25, 50 })
        {
          @if (Model.PagedSchedules.PageSize == size)
          {
            <option value="@size" selected="selected">@size baris</option>
          }
          else
          {
            <option value="@size">@size baris</option>
          }
        }
      </select>
    </div>
  </div>
}
else
{
  <div class="text-center p-5">
    <div class="mb-3">
      <i class="bx bx-calendar-x text-primary" style="font-size: 4rem;"></i>
    </div>
    <h5>Tidak ada data pemeliharaan ditemukan</h5>
    @if (ViewBag.CraneName != null)
    {
      <p class="text-muted">Tidak ada jadwal pemeliharaan yang ditemukan untuk Crane @ViewBag.CraneName.</p>
      <a href="@Url.Action("Index", "Maintenance", new { craneId = ViewBag.CraneId })" class="btn btn-primary mt-3">
        <i class="bx bx-plus me-1"></i> Buat Pemeliharaan untuk Crane Ini
      </a>
    }
    else
    {
      <p class="text-muted">Coba sesuaikan kriteria pencarian atau filter Anda.</p>
      <a href="@Url.Action("Index", "MaintenanceHistory")" class="btn btn-outline-secondary mt-3">
        <i class="bx bx-reset me-1"></i> Reset Filter
      </a>
    }
  </div>
}
